# Service例：3つのサービスタイプを比較
# 1. ClusterIP（デフォルト）：クラスター内部からのみアクセス可能
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    app: nginx
spec:
  type: ClusterIP  # クラスター内部専用（デフォルト）
  selector:
    app: nginx     # 対象のPodを選択（deployment.yamlのlabelと一致）
  ports:
  - name: http     # ポート名（複数ポートがある場合に必須）
    protocol: TCP  # プロトコル（TCP/UDP）
    port: 80       # Serviceが公開するポート
    targetPort: 80 # Podのコンテナポート
---
# 2. NodePort：各ノードの指定ポートからアクセス可能
apiVersion: v1
kind: Service
metadata:
  name: nginx-nodeport
  labels:
    app: nginx
spec:
  type: NodePort   # ノードポート経由でアクセス
  selector:
    app: nginx     # 対象のPodを選択
  ports:
  - name: http
    protocol: TCP
    port: 80       # Service内部ポート
    targetPort: 80 # Podのコンテナポート
    nodePort: 30080 # ノードの外部ポート（30000-32767の範囲）
---
# 3. LoadBalancer：クラウドのロードバランサーを使用
apiVersion: v1
kind: Service
metadata:
  name: nginx-loadbalancer
  labels:
    app: nginx
spec:
  type: LoadBalancer  # クラウドLBを自動作成（AWS ELB、GCP LBなど）
  selector:
    app: nginx        # 対象のPodを選択
  ports:
  - name: http
    protocol: TCP
    port: 80          # 外部からアクセスするポート
    targetPort: 80    # Podのコンテナポート